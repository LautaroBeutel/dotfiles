# General settings
# ==============================================================================

# assing the $mod key to Super (the windows key)
#Use Mod1 if you prefer the Alt key
set $mod Mod4

# Set the wallpaper
exec --no-startup-id nitrogen --restore

# Font for window titles.
font pango:Hack 8
#font pango:DejaVu Sans Mono 8

# Colour scheme
# ------------------------------------------------------------------------------

# UPDATE 2018-06-23
    # If you do not like the following approach, define colours here.
    # Use the following syntax: set $[variable name] [colour hex value]
    # Example:
    # set $black #000000
    #
    # I recommend you have a look at those two pages, if you need inspiration.
    # https://protesilaos.com/schemes
    # https://protesilaos.com/tempus-themes
    #
    # Relying on Xresources is good for using one palette for many programs.
    # But it means you have to edit separate files.
    # You need to keep things well organised. I do that in my current dotfiles.
    # See https://gitlab.com/protesilaos/dotfiles
    #
    # Also, it may not be easy to migrate to Sway (basically i3 for Wayland).
    # Have not tried it, so this is just an assumption (Xresources is for Xorg).

# NOTE XXX Colours are sourced from ~/.Xresources
# Xcolors are defined as `*.color[n]`, which exposes them to any program
# The current setup uses these colours for URxvt, i3, and polybar

# Tempus themes: https://github.com/protesilaos/tempus-themes
# By Protesilaos Stavrou https://protesilaos.com
set_from_resource $col0  color0  #000000
set_from_resource $col1  color1  #000000
set_from_resource $col2  color2  #000000
set_from_resource $col3  color3  #000000
set_from_resource $col4  color4  #000000
set_from_resource $col5  color5  #000000
set_from_resource $col6  color6  #000000
set_from_resource $col7  color7  #000000
set_from_resource $col8  color8  #000000
set_from_resource $col9  color9  #000000
set_from_resource $col10 color10 #000000
set_from_resource $col11 color11 #000000
set_from_resource $col12 color12 #000000
set_from_resource $col13 color13 #000000
set_from_resource $col14 color14 #000000
set_from_resource $col15 color15 #000000

# Common applications
# ------------------------------------------------------------------------------
set $term konsole
set $browser vivaldi
set $fm dolphin
#set $rss urxvtc -e newsboat
set $mail urxvtc -e thunderbird
#set $podcast urxvtc -e podboat -a
#set $imageeditor gimp
set $music spotify
#set $music urxvtc -e ncmpcpp

# Bar
# ------------------------------------------------------------------------------
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
       status_command i3blocks
       colors {
                background #161616
                statusline #1ABC9C
                separator #fff
                # colorclass       <border> <background> <text>
                focused_workspace  #959595  #959595     #161616
                inactive_workspace #424242  #424242     #fff

        }
}

# Window settings
# ==============================================================================

# General environment rules
# ------------------------------------------------------------------------------
smart_borders on
# smart_gaps on
gaps inner 15
gaps outer 0
for_window [class="^.*"] border pixel 0
focus_on_window_activation urgent
workspace_auto_back_and_forth yes
force_display_urgency_hint 0 ms
focus_follows_mouse no

# Key bindings
# ----------------------------------------------------------------------------
# start a terminal
bindsym $mod+Return exec $term

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+d exec "rofi -modi drun,run -show drun"

bindsym $mod+b exec "blueman-manager"

# Autostart programs
# ------------------------------------------------------------------------------

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Start the compositor
exec --no-startup-id picom

# Use pactl to adjust volume in PulseAudio.

bindsym XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +5 --max-volume 100 && pkill -RTMIN+10 i3blocks #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -5 --max-volume 100 && pkill -RTMIN+10 i3blocks #decrease sound volume
bindsym Shift+XF86AudioRaiseVolume exec --no-startup-id pulsemixer --change-volume +5 --max-volume 300 && pkill -RTMIN+10 i3blocks #increase sound volume
bindsym Shift+XF86AudioLowerVolume exec --no-startup-id pulsemixer --change-volume -5 --max-volume 300 && pkill -RTMIN+10 i3blocks #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && pkill -RTMIN+10 i3blocks

# Music song controls
#bindsym XF86AudioPlay exec playctl play
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
#tiling_drag modifier titlebar

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+ntilde focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ntilde move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"
